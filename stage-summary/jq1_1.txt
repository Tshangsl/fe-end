知识梳理和jquery库引导

Cannot read property 'index' of undefined
属性
property 对象的属性
attribute 写在dom结构里的属性(id class)

对于一个类来讲 使用new关键字与否 创建出来地是不同的

Person是window对象下的一个方法
不过是因为window是全局对象 所以可以省略不写
script中的 无论是属性还是方法 都是放在window全局里的

打印一个对象时 会默认调用toString()方法

 // 1.let关键字的相关使用

//2.基本数据类型 string number boolean 
//和引用数据类型 String Number Boolean
//各自存在的意义和js引擎底部对两者的的转换调用

//3.函数方式调用一个函数（类） new对象方式调用一个类
//用new 来判断一个方法体到底定义的是类还是对象 的概念
//script中函数是在全局对象window下创建的一个方法的概念
//打印一个对象 会默认调用该对象的toString()方法概念
//***当作一个普通的函数去调用和当作一个类new一个对象调用的区别
//toString()方法就是会自动调用 但是在控制台中设定打印出的一个对象
//alert()方法 打印出的是一个字符串

js中的所有类都自动继承了Object Object中有一个toString()方法

window对象是浏览器dom中所有对象的父对象 父对象也是对象
因此window对象的祖宗也是Object

window是内置的全局Object window是Object创造出来的 
通过原型链的方式继承了Object的属性和方法

window是浏览器里的顶级对象 暴露给开发者用于操作浏览器行为的对象
javascript中的Object是ECAMscript语言规范中的数据类型

**函数提升和变量提升
函数提升要比变量提升的优先级要高一些，且不会被变量声明覆盖，但是会被变量赋值之后覆盖。

**函数式编程 
将函数赋值给一个变量
将函数作为一个参数传递给另一个变量
将函数作为一个值返回

函数内用var声明局部的 不加var全局的 用let声明的更是局部的

**函数内得到实参的信息 可以使用arguments[]数组
获得函数形参的个数 函数名.length获得

**little tip    
arguments.callee可以用来指代函数自己
但此方法不建议使用 使用此语法带来的问题会比直接修改函数名带来的问题更多

**具名函数
给函数表达式的匿名函数 起了一个名字
此名字只允许在函数表达式内部调用 不允许在外部访问
递归时

**this 永远指向当前对象
区别
 aa可以在任意地方访问
 this只能在函数内部访问

**this指向的是哪个对象 
this只看所在函数前面的对象是谁
永远找的是最近的那个function的对象







