ecmascript 6入门教程

javascript创造者公司 Netscape公司
决定将javascript交给ECMA

var es3

es2015之后的版本 统称es6 ECMAscript2015
js中数据类型分两种 基本数据类型 引用数据类型
五种基本数据类型
boolean string number undefined null
引用数据类型
object array

js中只有 null undefine 空字符串 0 的boolean值为false

函数提升优先级高于变量提升

作用域
1.全局作用域
2.局部(函数)作用域(局部作用域就是函数作用域)
3.块级作用域 es6中 一个{}即一个块级作用域 
    let声明的变量只能在声明它的{}中获取到

var和let区别
    1.let不允许重复声明变量
    2.let不存在变量提升
    3.let存在块级作用域的概念
    4.暂时性死区 一个作用域内 不允许同名变量进来 
      当用let去声明一个变量的时候 就会形成一个封闭的死区
      let声明的变量 只能在声明后调用 否则就会报错

var和const的区别
    1.const不允许重复声明
    2.const不存在变量提升
    3.赋值以后不允许更改变量的值(引用数据类型不能改地址)

const实际上保证的，并不是变量的值不得改动，
而是变量指向的那个内存地址不得改动。

对于复合类型的数据（主要是对象和数组），变量指向的内存地址，
保存的只是一个指针，const只能保证这个指针是固定的，至于它指向的数据结构是不是可变的；

回调函数
当程序跑起来时，一般情况下，应用程序（application program）
会时常通过API调用库里所预先备好的函数。
但是有些库函数（library function）却要求应用先传给它一个函数，
好在合适的时候调用，以完成目标任务。
这个被传入的、后又被调用的函数就称为回调函数（
callback function）。
可以看到，回调函数通常和应用处于同一抽象层
（因为传入什么样的回调函数是在应用级别决定的）。
而回调就成了一个高层调用底层，底层再回过头来调用高层的过程。
（我认为）这应该是回调最早的应用之处，也是其得名如此的原因。

回调并不仅仅用在应用和库之间。
任何时候，只要想获得类似于上面情况的灵活性，都可以利用回调。