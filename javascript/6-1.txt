函数作用域/闭包/函数立即调用/定时器/对象/this/js内存分配机制

（立即执行函数）不多次调用 只调用一次
()(); 第一个()是语法要求的

undefined 是定义了一个变量 但是没有赋值
not defined 错误

函数提升 默认行为
变量提升

函数里面所有以var声明的变量(即局部变量)都有一个提升概念
**在函数内部使用var声明的变量是局部变量 函数内没有用var声明的是全局变量

**词法作用域：指函数在定义（或声明）它们的定义域里运行
	 而不是在执行/调用它们的作用域里运行

作用域查找方式 查找最近的变量声明赋值

scope 作用域
argument 参数

*arguments 用来保存函数的所有的实参的数组 使用arguments语法实现递归算法的优化 
MDN官方手册 arguments.callee不推荐使用 用来取代当前正在调用的函数的名字

闭包:
条件
在外部函数的内部声明内部函数，
在内部函数里引用了外部函数的局部变量
以上两个条件缺一不可
当外部函数调用完毕后，会被放在内存里面，局部变量不被释放


定时器
调用一次
setTimeout(function(){},time(ms));
调用多次
setInterval(function(){},time(ms));

对象：
everyting is object 一切皆对象
属性和方法
面向对象（object-oriented）
OOA(object-oriented analysis):面向对象的分析
OOD(object-oriented design):面向对象设计
OOP(object-oriented programming):面向对象编程

this指针永远指向当前对象

js内存分配机制

栈内存(stack) 连续 空间小---永远都是基本数据类型 
地址（只是这一段数字有特殊含义 探究到底 归根结底 都是值传递）
所有的基本数据类型的数据都是存在栈内存中
变量存在的位置就是数据存储的位置

堆内存(heap) 没有连续 空间大
所有的引用数据类型存放在堆中
变量名(地址)存在栈 new出来对象存在堆中 通过指针指向它 
电脑中地址一般16进制表示

只要是new出来的对象 数据一模一样 但是就是两个空间/对象

值传递
引用传递












