选择器 优先级 命名规范
1.产品
2.UE（UserInterface Experience）
	交互 axure 原型设计工具 原型
3.UI（UserInterface）
4.FE（Front-End）100%还原设计岗
5.RD（Development）/BE（Back-End）
6.测试 白盒测试 黑盒测试（简单）
7.运维（网络工程专业）
8.运营（推广）

css选择器 selector 

标签选择器
id选择器
类选择器/多类选择器
派生选择器（后代选择器/子代选择器>）
分组选择器
属性选择器

html css 但凡属性都由两个部分组成 属性名称 属性值
#000000黑
#ffffff白
#ff0000红
#00ff00绿
#0000ff蓝

16进制颜色表达

css.doyoe.com css手册

~标签选择器
~id选择器id（identify）#

~类选择器 可以写多个  .

~***多类选择器*** 可移植性
样式顺序 覆盖 按照（css中）类声明的顺序 后面的优先级会更高 
不用修改源代码 进行代码覆盖 实现功能
使用class类选择器 id选择器不要选择覆盖使用作 因为可能会出现id重复问题
真正的组件 一个id都没有

div是html中为数不多的没有语义的标签

~派生选择器 
  即后代选择器（所有的后代）
>子代选择器（儿子） 在IE6不支持 IE6不是多标签 从IE7开始多标签

派生 继承

安卓 /ios chrome /safari

网银一般要用IE
~分组选择器 两多个 一起
~属性选择器 （不是很常用 有兼容性问题）

class一定加. id一定加# 只有属性选择器不加
只在{左边应用样式 前面都是限定范围

更高级选择器 使语法更简洁 但是这就够用了


***选择器优先级和权重值

css 
内联样式>内部样式>外部样式(后两个并不是完全如此的)
js的css 表达 都是内联样式		

权重值（固定）
内联：1000
id：100
class：10
tag：1
(不建议使用)
!important
强制打破标准优先级

优先级相同 覆盖
权重值可以相加 
权重值相同就看前后顺序 
增加权重值 
可通过增加后代方式增大权重值

h1#h11 不推荐使用 从右往左读 没意义 浪费性能
div.aa 很正常 从右往左读

#div1 #div2-2 h1{} 两个id一起写没有意义 一个id就能定位 
id里面可以放class 不要再放id

命名规范：
英文 无空格 字母 数字下户线 主流两个单词间用- 单词最好有意义







